version: '3.8'

services:
  # Database Services (same as production)
  postgres:
    image: postgres:15-alpine
    container_name: tillu-postgres-dev
    environment:
      POSTGRES_DB: tillu_pos_dev
      POSTGRES_USER: tillu_user
      POSTGRES_PASSWORD: tillu_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - tillu-dev-network

  redis:
    image: redis:7-alpine
    container_name: tillu-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - tillu-dev-network

  # API Gateway (Development mode with hot reload)
  api-gateway-dev:
    build:
      context: .
      dockerfile: Dockerfile.api-gateway.dev
    container_name: tillu-api-gateway-dev
    ports:
      - "3000:3000"
      - "9229:9229"  # Debug port
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://tillu_user:tillu_password@postgres:5432/tillu_pos_dev
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-jwt-secret
    volumes:
      - ./apps/api-gateway:/app/apps/api-gateway
      - ./packages:/app/packages
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - tillu-dev-network
    command: npm run start:dev

  # Frontend services in development mode
  pos-terminal-dev:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
      args:
        APP_NAME: pos-terminal
    container_name: tillu-pos-terminal-dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_PUBLIC_WS_URL=ws://localhost:3000
    volumes:
      - ./apps/pos-terminal:/app/apps/pos-terminal
      - ./packages:/app/packages
      - /app/node_modules
    networks:
      - tillu-dev-network
    command: npm run dev

  customer-pwa-dev:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
      args:
        APP_NAME: customer-pwa
    container_name: tillu-customer-pwa-dev
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_PUBLIC_WS_URL=ws://localhost:3000
    volumes:
      - ./apps/customer-pwa:/app/apps/customer-pwa
      - ./packages:/app/packages
      - /app/node_modules
    networks:
      - tillu-dev-network
    command: npm run dev

  manager-dashboard-dev:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
      args:
        APP_NAME: manager-dashboard
    container_name: tillu-manager-dashboard-dev
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_PUBLIC_WS_URL=ws://localhost:3000
    volumes:
      - ./apps/manager-dashboard:/app/apps/manager-dashboard
      - ./packages:/app/packages
      - /app/node_modules
    networks:
      - tillu-dev-network
    command: npm run dev

  kitchen-display-dev:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
      args:
        APP_NAME: kitchen-display
    container_name: tillu-kitchen-display-dev
    ports:
      - "3004:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_PUBLIC_WS_URL=ws://localhost:3000
    volumes:
      - ./apps/kitchen-display:/app/apps/kitchen-display
      - ./packages:/app/packages
      - /app/node_modules
    networks:
      - tillu-dev-network
    command: npm run dev

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  tillu-dev-network:
    driver: bridge
