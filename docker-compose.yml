version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    container_name: tillu-postgres
    environment:
      POSTGRES_DB: tillu_pos
      POSTGRES_USER: tillu_user
      POSTGRES_PASSWORD: tillu_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - tillu-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tillu_user -d tillu_pos"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: tillu-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tillu-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway (Backend)
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.api-gateway
    container_name: tillu-api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://tillu_user:tillu_password@postgres:5432/tillu_pos
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - TWILIO_ACCOUNT_SID=your-twilio-account-sid
      - TWILIO_AUTH_TOKEN=your-twilio-auth-token
      - TWILIO_PHONE_NUMBER=your-twilio-phone-number
      - SENDGRID_API_KEY=your-sendgrid-api-key
      - SENDGRID_FROM_EMAIL=noreply@tillu.com
      - OPENAI_API_KEY=your-openai-api-key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tillu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # POS Terminal Frontend
  pos-terminal:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        APP_NAME: pos-terminal
    container_name: tillu-pos-terminal
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api-gateway:3000
      - NEXT_PUBLIC_WS_URL=ws://api-gateway:3000
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - tillu-network
    restart: unless-stopped

  # Customer PWA Frontend
  customer-pwa:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        APP_NAME: customer-pwa
    container_name: tillu-customer-pwa
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api-gateway:3000
      - NEXT_PUBLIC_WS_URL=ws://api-gateway:3000
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - tillu-network
    restart: unless-stopped

  # Manager Dashboard Frontend
  manager-dashboard:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        APP_NAME: manager-dashboard
    container_name: tillu-manager-dashboard
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api-gateway:3000
      - NEXT_PUBLIC_WS_URL=ws://api-gateway:3000
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - tillu-network
    restart: unless-stopped

  # Kitchen Display Frontend
  kitchen-display:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        APP_NAME: kitchen-display
    container_name: tillu-kitchen-display
    ports:
      - "3004:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api-gateway:3000
      - NEXT_PUBLIC_WS_URL=ws://api-gateway:3000
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - tillu-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: tillu-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api-gateway
      - pos-terminal
      - customer-pwa
      - manager-dashboard
      - kitchen-display
    networks:
      - tillu-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  tillu-network:
    driver: bridge
